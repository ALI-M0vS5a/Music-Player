plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

static def Properties getProp(File file) {
    def prop = new Properties()
    if (!file.exists()) {
        throw new IllegalArgumentException("couldn't find $file, make sure File is correct")
    }
    prop.load(new FileInputStream(file))
    return prop
}

def Properties getRootProp(String propName) {
    def propFile = rootProject.file(propName)
    if (!propFile.exists()) {
        throw new IllegalArgumentException("couldn't find $propName in $rootProject")
    }
    def prop = getProp(propFile)
    return prop
}

def Properties getLocalProp() {
    def prop = getRootProp("local.properties")
    return prop
}

def Properties getKeystoreProp() {
    def prop = getRootProp("keystore.properties")
    return prop
}

android {

    signingConfigs {
        testRelease {
            storeFile file(getKeystoreProp()['KEYSTORE_FILE_PATH'])
            storePassword getKeystoreProp()['KEYSTORE_PASSWORD']
            keyAlias getKeystoreProp()['KEYSTORE_KEY_ALIAS']
            keyPassword getKeystoreProp()['KEYSTORE_KEY_PASSWORD']
        }
    }
    compileSdk 32

    defaultConfig {
        applicationId "com.kylentt.mediaplayer"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.testRelease
        }
        debug {
            signingConfig signingConfigs.testRelease
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    sourceSets.all {
        kotlin.srcDir("src/$name/kotlin")
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    namespace 'com.kylentt.mediaplayer'
}

dependencies {

    // Default
    dependencies {
        implementation "androidx.core:core-ktx:1.7.0"
        implementation "androidx.compose.ui:ui:1.1.1"
        implementation "androidx.compose.material:material:1.1.1"
        implementation "androidx.compose.ui:ui-tooling-preview:1.1.1"
        implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.1"
        implementation "androidx.activity:activity-compose:1.4.0"
        implementation 'com.google.android.material:material:1.5.0'
        testImplementation "junit:junit:4.13.2"
        androidTestImplementation "androidx.test.ext:junit:1.1.3"
        androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
        androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.1.1"
        debugImplementation "androidx.compose.ui:ui-tooling:1.1.1"
    }

    // Accompanist
    dependencies {
        def accompanistVersion = "0.24.3-alpha"
        def navAnimationVersion = "0.24.4-alpha"
        def pagerVersion = "0.24.4-alpha"
        
        implementation "com.google.accompanist:accompanist-drawablepainter:$accompanistVersion"
        implementation "com.google.accompanist:accompanist-navigation-animation:$navAnimationVersion"
        implementation "com.google.accompanist:accompanist-navigation-material:$accompanistVersion"
        implementation "com.google.accompanist:accompanist-pager:$pagerVersion"
        implementation "com.google.accompanist:accompanist-permissions:$accompanistVersion"
        implementation "com.google.accompanist:accompanist-placeholder:$accompanistVersion"
        implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanistVersion"
    }

    // Core
    dependencies {
        def splashScreenVersion = "1.0.0-beta02"
        def startupVersion = "1.1.1"

        implementation "androidx.core:core-splashscreen:$splashScreenVersion"
        implementation "androidx.startup:startup-runtime:$startupVersion"
    }

    // Compose
    dependencies {
        def composeNavigation = "2.5.0-beta01"
        def composeMaterialVersion = "1.1.1"
        def composeMaterialIconVersion = "1.2.0-alpha08"
        def composeMaterial3Version = "1.0.0-alpha10"

        implementation "androidx.compose.foundation:foundation:$composeMaterialVersion"
        implementation "androidx.compose.material:material-icons-core:$composeMaterialIconVersion"
        implementation "androidx.compose.material:material-icons-extended:$composeMaterialVersion"
        implementation "androidx.compose.material3:material3:$composeMaterial3Version"
        implementation "androidx.navigation:navigation-compose:$composeNavigation"
    }

    // Debugging
    dependencies {
        def timberVersion = "5.0.1"
        def leakCanaryVersion = "2.9.1"

        implementation "com.jakewharton.timber:timber:$timberVersion"
        debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    }

    // DataStore
    dependencies {
        def dataStoreVersion = "1.0.0"

        implementation "androidx.datastore:datastore:$dataStoreVersion"
    }

    // DI
    dependencies {
        def dagger_hilt_version = "2.41"
        def dagger_hilt_compose_version = "1.0.0"

        implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
        kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"
        implementation "androidx.hilt:hilt-navigation-compose:$dagger_hilt_compose_version"
    }

    // KotlinX
    dependencies {
        def serializationVersion = "1.3.2"

        implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serializationVersion"
    }

    // Media
    dependencies {
        def media3_version = "1.0.0-alpha03"
        def exoplayer_version = "2.17.1"
        def jaudiotagger_version = "2.3.15"

        implementation "androidx.media3:media3-exoplayer:$media3_version"
        implementation "androidx.media3:media3-session:$media3_version"
        implementation "androidx.media3:media3-common:$media3_version"
        implementation "androidx.media3:media3-ui:$media3_version"
        implementation "com.google.android.exoplayer:extension-mediasession:$exoplayer_version"
        implementation "com.github.Adonai:jaudiotagger:$jaudiotagger_version"

    }

    // Image Loading
    dependencies {
        def coilVersion = "1.4.0"

        /*
        1.0.6 Missing transition property on [coil.request.*RequestOptions],
        called from [coil.compose.ImagePainterKt.updatePainter()]
        */
        def coilTransformerVersion = "1.0.5"

        implementation "io.coil-kt:coil:$coilVersion"
        implementation "io.coil-kt:coil-compose:$coilVersion"
        implementation "jp.wasabeef.transformers:coil:$coilTransformerVersion"
        implementation "jp.wasabeef.transformers:coil-gpu:$coilTransformerVersion"
    }

    // Room
    dependencies {
        def roomVersion = "2.4.2"

        implementation "androidx.room:room-runtime:$roomVersion"
        implementation "androidx.room:room-ktx:$roomVersion"
        kapt "androidx.room:room-compiler:$roomVersion"
    }
}